name: Jan Electron Linter & Test
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
    paths:
      - "electron/**"
      - .github/workflows/jan-electron-linter-and-test.yml
      - "web/**"
      - "uikit/**"
      - "package.json"
      - "node_modules/**"
      - "yarn.lock"
      - "core/**"
      - "extensions/**"
      - "!README.md"
      - "Makefile"

  pull_request:
    branches:
      - main
      - dev
      - release/**
    paths:
      - "electron/**"
      - .github/workflows/jan-electron-linter-and-test.yml
      - "web/**"
      - "uikit/**"
      - "package.json"
      - "node_modules/**"
      - "yarn.lock"
      - "Makefile"
      - "extensions/**"
      - "core/**"
      - "!README.md"

jobs:
  test-on-macos:
    runs-on: [self-hosted, macOS, macos-desktop]
    steps:
      - name: Getting the repo
        uses: actions/checkout@v3

      - name: Installing node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: "Cleanup cache"
        continue-on-error: true
        run: |
          make clean

      - name: Linter and test
        run: |
          npm config set registry ${{ secrets.NPM_PROXY }} --global
          yarn config set registry ${{ secrets.NPM_PROXY }} --global
          make test
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: "false"
          TURBO_API: "${{ secrets.TURBO_API }}"
          TURBO_TEAM: "macos"
          TURBO_TOKEN: "${{ secrets.TURBO_TOKEN }}"

  test-on-windows:
    if: github.event_name == 'push'
    strategy:
      fail-fast: false
      matrix:
        antivirus-tools: ['mcafee', 'default-windows-security','bit-defender']
    runs-on: windows-desktop-${{ matrix.antivirus-tools }}
    steps:
      - name: Getting the repo
        uses: actions/checkout@v3

      - name: Installing node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Clean cache, continue on error
      - name: "Cleanup cache"
        shell: powershell
        continue-on-error: true
        run: |
          make clean

      - name: Linter and test
        shell: powershell
        run: |
          npm config set registry ${{ secrets.NPM_PROXY }} --global
          yarn config set registry ${{ secrets.NPM_PROXY }} --global
          make test
        env:
          TURBO_API: "${{ secrets.TURBO_API }}"
          TURBO_TEAM: "windows"
          TURBO_TOKEN: "${{ secrets.TURBO_TOKEN }}"
  test-on-windows-pr:
    if: github.event_name == 'pull_request'
    runs-on: windows-desktop-default-windows-security
    steps:
      - name: Getting the repo
        uses: actions/checkout@v3

      - name: Installing node
        uses: actions/setup-node@v1
        with:
          node-version: 20

      # Clean cache, continue on error
      - name: "Cleanup cache"
        shell: powershell
        continue-on-error: true
        run: |
          make clean

      - name: Linter and test
        shell: powershell
        run: |
          npm config set registry ${{ secrets.NPM_PROXY }} --global
          yarn config set registry ${{ secrets.NPM_PROXY }} --global
          make test
        env:
          TURBO_API: "${{ secrets.TURBO_API }}"
          TURBO_TEAM: "windows"
          TURBO_TOKEN: "${{ secrets.TURBO_TOKEN }}"

  test-on-ubuntu:
    runs-on: [self-hosted, Linux, ubuntu-desktop]
    steps:
      - name: Getting the repo
        uses: actions/checkout@v3

      - name: Installing node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: "Cleanup cache"
        continue-on-error: true
        run: |
          make clean
            
      - name: Linter and test
        run: |
          export DISPLAY=$(w -h | awk 'NR==1 {print $2}')
          echo -e "Display ID: $DISPLAY"
          npm config set registry ${{ secrets.NPM_PROXY }} --global
          yarn config set registry ${{ secrets.NPM_PROXY }} --global
          make test
        env:
          TURBO_API: "${{ secrets.TURBO_API }}"
          TURBO_TEAM: "linux"
          TURBO_TOKEN: "${{ secrets.TURBO_TOKEN }}"
